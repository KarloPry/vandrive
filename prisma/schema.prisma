generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Models

model User {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  age  Int
}

model Empresa {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  nombre   String @unique
  plan     Plan   @default(On_demand)
  latitud  Float
  longitud Float

  accounts Account[]
}

enum Plan {
  On_demand
  Gold
  Enterprice
}

model Account {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  isOwner   Boolean  @default(false)
  latitud   Float
  longitud  Float
  empresaId String   @db.ObjectId
  viajesid  String[] @db.ObjectId

  Empresa Empresa @relation(fields: [empresaId], references: [id])
  Viaje   Viaje[] @relation(fields: [viajesid], references: [id])
}

// TODO: checar credenciales con AUTH0, verificar como se entrega eso

model Viaje {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  fechaInicio       DateTime          @default(now())
  fechaFin          DateTime?
  unidadId          String            @db.ObjectId
  choferid          String            @db.ObjectId
  puntosIntermedios PuntoIntermedio[]
  distancia         Float?
  pasajerosId       String[]          @db.ObjectId

  Pasajeros Account[] @relation(fields: [pasajerosId], references: [id])
  unidad    Unidad    @relation(fields: [unidadId], references: [id])
  chofer    Chofer    @relation(fields: [choferid], references: [id])
}

type PuntoIntermedio {
  orden    Int
  longitud Float
  latitud  Float
}

model Unidad {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  tipoUnidad TipoUnidad @default(van)

  viajes Viaje[]
}

enum TipoUnidad {
  van
  camion
}

model Chofer {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  edad Int

  viajes Viaje[]
}
